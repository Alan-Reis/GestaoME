
@model PagedList.IPagedList<ClickServ2022.Models.Cliente>

@{
    ViewData["Title"] = "Index";
}

<h1>CLIENTES</h1>

<p>
    <a asp-action="Create">Novo Cliente</a>
</p>

<form asp-action="Index">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <table>
        <tr>
            <td>NOME / CONDOMÍNIO</td>
            <td>
                <input name="nome" class="form-control" />
            </td>
        </tr>
    </table>

    <div class="form-group">
        <input type="submit" value="BUSCAR" class="btn btn-primary" />
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <h3>Nome</h3>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.ActionLink("Add Dados", "AddDados", new { id=item.ClienteID }) |
                    @Html.ActionLink("Edit", "Edit", new { id=item.ClienteID }) |
                    @Html.ActionLink("Details", "Details", new { id=item.ClienteID }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.ClienteID })
                </td>
            </tr>
        }
    </tbody>
</table>

<!--Código para gerar paginação-->
<div>
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
    
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink("< Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Anterior
    }
    
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Próxima >", "Index", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:Próxima >
        @Html.Raw(" ")
        @:>>
    }
</div>