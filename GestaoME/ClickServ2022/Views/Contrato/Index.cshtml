@model PagedList.IPagedList<ClickServ2022.Models.Cliente>

@{
    ViewData["Title"] = "Index";
}

<div class="container p-3 my-3 border">
    <div class="row m-1">
        <div class="form-group">
            @Html.ActionLink("Novo Contrato", "Create",null,null,new { @class = "btn btn-secondary "})
            @Html.ActionLink("Gerar Preventivas", "GerarPreventivas","Preventiva", null, new {@class = "btn btn-outline-secondary"})
            <a class="btn btn-outline-secondary" href="https://smallpdf.com/pt/juntar-pdf" target="_blank">Unificar Preventivas</a>
        </div>
    </div>

    <br />

    <div class="row">
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col">
                <div class="input-group">
                    <div class="input-group-text">Pesquisar por</div>
                    <select name="coluna" class="form-control">
                        <option>Nome</option>
                        <option>CPF/CNPJ</option>
                        <option>Logradouro</option>
                        <option>Condomínio</option>
                    </select>
                    <input name="nome" class="form-control" focus required />
                    <input type="submit" value="Buscar" class="btn btn-primary" />
                </div>
            </div>
        </form>
    </div>
</div>

<div class="container p-3 my-3 border">
    <h4 class="bg-secondary text-white text-center">CONTRATOS</h4>


    <h5 style="color:red">@ViewBag.Erro</h5>

    @if (Model.Count == 0)
    {
        <div class="form-group">
            @Html.ActionLink("SIM", "Create",null,null,new { @class = "btn btn-primary"})
            @Html.ActionLink("NÃO", "Index",null,null,new { @class = "btn btn-danger"})
        </div>

    }

    <table class="table table-hover">
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Nome, "Details",  new { id=item.ClienteID})
                    </td>
                    <td>
                        @Html.ActionLink(item.Endereco.Logradouro, "Details",  new { id=item.ClienteID})
                    </td>
                    <td>
                        @Html.ActionLink(item.Endereco.Complemento, "Details",  new { id=item.ClienteID})
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!--Código para gerar paginação-->
    <div>
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        de @Model.PageCount

        @if (Model.HasPreviousPage)
        {
            @Html.ActionLink("Primeira", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
            @Html.Raw(" ")
            ;
            @Html.ActionLink("Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        }
        else
        {
            @:<<
            @Html.Raw(" ")
            ;
            @: Anterior
        }

        @if (Model.HasNextPage)
        {
            @Html.ActionLink("Próxima", "Index", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
            @Html.Raw(" ")
            ;
            @Html.ActionLink("Última", "Index", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        }
        else
        {
            @:Próxima
            @Html.Raw(" ")
            @:>>
        }
    </div>
</div>